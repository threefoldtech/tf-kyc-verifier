{
    "swagger": "2.0",
    "info": {
        "description": "This is a KYC service for TFGrid.",
        "title": "TFGrid KYC API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "threefold.io",
            "url": "https://threefold.io",
            "email": "info@threefold.io"
        },
        "version": "0.2.0"
    },
    "basePath": "/",
    "paths": {
        "/api/v1/configs": {
            "get": {
                "description": "Returns the service configs",
                "tags": [
                    "Misc"
                ],
                "summary": "Get Service Configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "$ref": "#/definitions/responses.AppConfigsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/data": {
            "get": {
                "description": "Returns the verification data for a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Get Verification Data",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "TFChain SS58Address",
                        "name": "X-Client-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "hex-encoded message `{api-domain}:{timestamp}`",
                        "name": "X-Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "maxLength": 128,
                        "minLength": 128,
                        "type": "string",
                        "description": "hex-encoded sr25519|ed25519 signature",
                        "name": "X-Signature",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "$ref": "#/definitions/responses.VerificationDataResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "Returns the health status of the service",
                "tags": [
                    "Health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "$ref": "#/definitions/responses.HealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/status": {
            "get": {
                "description": "Returns the verification status for a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Get Verification Status",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "TFChain SS58Address",
                        "name": "client_id",
                        "in": "query"
                    },
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "Twin ID",
                        "name": "twin_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "$ref": "#/definitions/responses.VerificationStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/token": {
            "post": {
                "description": "Returns a token for a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Get or Generate iDenfy Verification Token",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "TFChain SS58Address",
                        "name": "X-Client-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "hex-encoded message `{api-domain}:{timestamp}`",
                        "name": "X-Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "maxLength": 128,
                        "minLength": 128,
                        "type": "string",
                        "description": "hex-encoded sr25519|ed25519 signature",
                        "name": "X-Signature",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Existing token retrieved",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "$ref": "#/definitions/responses.TokenResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "New token created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "$ref": "#/definitions/responses.TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/version": {
            "get": {
                "description": "Returns the service version",
                "tags": [
                    "Misc"
                ],
                "summary": "Get Service Version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "$ref": "#/definitions/responses.AppVersionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhooks/idenfy/id-expiration": {
            "post": {
                "description": "Processes the doc expiration notification for a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Process Doc Expiration Notification",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/webhooks/idenfy/verification-update": {
            "post": {
                "description": "Processes the verification update for a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Process Verification Update",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "config.Challenge": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "window": {
                    "type": "integer"
                }
            }
        },
        "config.IDLimiter": {
            "type": "object",
            "properties": {
                "maxTokenRequests": {
                    "type": "integer"
                },
                "tokenExpiration": {
                    "type": "integer"
                }
            }
        },
        "config.IPLimiter": {
            "type": "object",
            "properties": {
                "maxTokenRequests": {
                    "type": "integer"
                },
                "tokenExpiration": {
                    "type": "integer"
                }
            }
        },
        "config.Idenfy": {
            "type": "object",
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "apisecret": {
                    "type": "string"
                },
                "baseURL": {
                    "type": "string"
                },
                "callbackSignKey": {
                    "type": "string"
                },
                "callbackUrl": {
                    "type": "string"
                },
                "devMode": {
                    "type": "boolean"
                },
                "namespace": {
                    "type": "string"
                },
                "whitelistedIPs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "config.Log": {
            "type": "object",
            "properties": {
                "debug": {
                    "type": "boolean"
                }
            }
        },
        "config.MongoDB": {
            "type": "object",
            "properties": {
                "databaseName": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "config.Server": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "string"
                }
            }
        },
        "config.TFChain": {
            "type": "object",
            "properties": {
                "wsProviderURL": {
                    "type": "string"
                }
            }
        },
        "config.Verification": {
            "type": "object",
            "properties": {
                "alwaysVerifiedIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expiredDocumentOutcome": {
                    "type": "string"
                },
                "minBalanceToVerifyAccount": {
                    "type": "integer"
                },
                "suspiciousVerificationOutcome": {
                    "type": "string"
                }
            }
        },
        "responses.AppConfigsResponse": {
            "type": "object",
            "properties": {
                "challenge": {
                    "$ref": "#/definitions/config.Challenge"
                },
                "idenfy": {
                    "$ref": "#/definitions/config.Idenfy"
                },
                "idlimiter": {
                    "$ref": "#/definitions/config.IDLimiter"
                },
                "iplimiter": {
                    "$ref": "#/definitions/config.IPLimiter"
                },
                "log": {
                    "$ref": "#/definitions/config.Log"
                },
                "mongoDB": {
                    "$ref": "#/definitions/config.MongoDB"
                },
                "server": {
                    "$ref": "#/definitions/config.Server"
                },
                "tfchain": {
                    "$ref": "#/definitions/config.TFChain"
                },
                "verification": {
                    "$ref": "#/definitions/config.Verification"
                }
            }
        },
        "responses.AppVersionResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "responses.HealthResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/responses.HealthStatus"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "responses.HealthStatus": {
            "type": "string",
            "enum": [
                "Healthy",
                "Degraded"
            ],
            "x-enum-varnames": [
                "HealthStatusHealthy",
                "HealthStatusDegraded"
            ]
        },
        "responses.Outcome": {
            "type": "string",
            "enum": [
                "VERIFIED",
                "REJECTED"
            ],
            "x-enum-varnames": [
                "OutcomeVerified",
                "OutcomeRejected"
            ]
        },
        "responses.TokenResponse": {
            "type": "object",
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "digitString": {
                    "type": "string"
                },
                "expiryTime": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "scanRef": {
                    "type": "string"
                },
                "sessionLength": {
                    "type": "integer"
                },
                "tokenType": {
                    "type": "string"
                }
            }
        },
        "responses.VerificationDataResponse": {
            "type": "object",
            "properties": {
                "additionalData": {},
                "address": {
                    "type": "string"
                },
                "addressVerification": {},
                "ageEstimate": {
                    "type": "string"
                },
                "authority": {
                    "type": "string"
                },
                "birthPlace": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientIpProxyRiskLevel": {
                    "type": "string"
                },
                "docBirthName": {
                    "type": "string"
                },
                "docDateOfIssue": {
                    "type": "string"
                },
                "docDob": {
                    "type": "string"
                },
                "docExpiry": {
                    "type": "string"
                },
                "docFirstName": {
                    "type": "string"
                },
                "docIssuingCountry": {
                    "type": "string"
                },
                "docLastName": {
                    "type": "string"
                },
                "docNationality": {
                    "type": "string"
                },
                "docNumber": {
                    "type": "string"
                },
                "docPersonalCode": {
                    "type": "string"
                },
                "docSex": {
                    "type": "string"
                },
                "docTemporaryAddress": {
                    "type": "string"
                },
                "docType": {
                    "type": "string"
                },
                "driverLicenseCategory": {
                    "type": "string"
                },
                "duplicateDocFaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duplicateFaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fullName": {
                    "type": "string"
                },
                "idenfyRef": {
                    "type": "string"
                },
                "manuallyDataChanged": {
                    "type": "boolean"
                },
                "mothersMaidenName": {
                    "type": "string"
                },
                "orgAddress": {
                    "type": "string"
                },
                "orgAuthority": {
                    "type": "string"
                },
                "orgBirthName": {
                    "type": "string"
                },
                "orgBirthPlace": {
                    "type": "string"
                },
                "orgFirstName": {
                    "type": "string"
                },
                "orgLastName": {
                    "type": "string"
                },
                "orgMothersMaidenName": {
                    "type": "string"
                },
                "orgNationality": {
                    "type": "string"
                },
                "orgTemporaryAddress": {
                    "type": "string"
                },
                "selectedCountry": {
                    "type": "string"
                }
            }
        },
        "responses.VerificationStatusResponse": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "final": {
                    "type": "boolean"
                },
                "idenfyRef": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/responses.Outcome"
                }
            }
        }
    }
}